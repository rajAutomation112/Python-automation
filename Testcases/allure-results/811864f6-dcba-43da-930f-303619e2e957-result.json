{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff716a2fea5+79173]\n\tGetHandleVerifier [0x0x7ff716a2ff00+79264]\n\t(No symbol) [0x0x7ff7167e9e5a]\n\t(No symbol) [0x0x7ff716840586]\n\t(No symbol) [0x0x7ff71684083c]\n\t(No symbol) [0x0x7ff716894247]\n\t(No symbol) [0x0x7ff7168689af]\n\t(No symbol) [0x0x7ff71689100d]\n\t(No symbol) [0x0x7ff716868743]\n\t(No symbol) [0x0x7ff7168314c1]\n\t(No symbol) [0x0x7ff716832253]\n\tGetHandleVerifier [0x0x7ff716cfa2dd+3004797]\n\tGetHandleVerifier [0x0x7ff716cf472d+2981325]\n\tGetHandleVerifier [0x0x7ff716d13380+3107360]\n\tGetHandleVerifier [0x0x7ff716a4aa2e+188622]\n\tGetHandleVerifier [0x0x7ff716a522bf+219487]\n\tGetHandleVerifier [0x0x7ff716a38df4+115860]\n\tGetHandleVerifier [0x0x7ff716a38fa9+116297]\n\tGetHandleVerifier [0x0x7ff716a1f558+11256]\n\tBaseThreadInitThunk [0x0x7ff97676e8d7+23]\n\tRtlUserThreadStart [0x0x7ff977c7c5dc+44]", "trace": "setup = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3cff8de1ca7a55736bc3688dcc61e873\")>, 'Admin', 'admin123')\n\n    @allure.feature(\"login functionality\")\n    @allure.story(\"login with valid data\")\n    def test_login(setup):\n        driver, user, passw = setup\n        lpage = LoginPage(driver)\n>       lpage.login(user,passw)\n\ntest_login.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\loginpage.py:17: in login\n    self.enter_text(self.USERNAME_FIELD, username)\n..\\pages\\base_page.py:14: in enter_text\n    WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located(locator)).send_keys(text)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3cff8de1ca7a55736bc3688dcc61e873\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002F6595A4D60>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff716a2fea5+79173]\nE       \tGetHandleVerifier [0x0x7ff716a2ff00+79264]\nE       \t(No symbol) [0x0x7ff7167e9e5a]\nE       \t(No symbol) [0x0x7ff716840586]\nE       \t(No symbol) [0x0x7ff71684083c]\nE       \t(No symbol) [0x0x7ff716894247]\nE       \t(No symbol) [0x0x7ff7168689af]\nE       \t(No symbol) [0x0x7ff71689100d]\nE       \t(No symbol) [0x0x7ff716868743]\nE       \t(No symbol) [0x0x7ff7168314c1]\nE       \t(No symbol) [0x0x7ff716832253]\nE       \tGetHandleVerifier [0x0x7ff716cfa2dd+3004797]\nE       \tGetHandleVerifier [0x0x7ff716cf472d+2981325]\nE       \tGetHandleVerifier [0x0x7ff716d13380+3107360]\nE       \tGetHandleVerifier [0x0x7ff716a4aa2e+188622]\nE       \tGetHandleVerifier [0x0x7ff716a522bf+219487]\nE       \tGetHandleVerifier [0x0x7ff716a38df4+115860]\nE       \tGetHandleVerifier [0x0x7ff716a38fa9+116297]\nE       \tGetHandleVerifier [0x0x7ff716a1f558+11256]\nE       \tBaseThreadInitThunk [0x0x7ff97676e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ff977c7c5dc+44]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "start": 1749026022478, "stop": 1749026032769, "uuid": "d02dce9b-ef5d-4c17-8a32-ca72685c0fd8", "historyId": "7a6d5049f9f16ad82653dde78c1774b6", "testCaseId": "7a6d5049f9f16ad82653dde78c1774b6", "fullName": "test_login#test_login", "labels": [{"name": "story", "value": "login with valid data"}, {"name": "feature", "value": "login functionality"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "LAPTOP-EGGV59UT"}, {"name": "thread", "value": "22360-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}